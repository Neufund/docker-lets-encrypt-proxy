# Scope: http

# Create a cache
# Effectively disable inactive-purging by setting the timeout to a year
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m inactive=365d max_size=1g;
proxy_cache my_cache;

# Configure nginx for fast pushing of cached files
sendfile           on;
tcp_nopush         on;
keepalive_timeout  65;

#
# Set default cache rules
#

# Ignore the default caching headers, these are for the browser.
# If you want to control nginx, use the `X-Accel-` headers
proxy_ignore_headers Expires Cache-Control Set-Cookie Vary;

# By default, 200, 301 and 302 responses are cached for one day
# other requests are cached for five seconds. These times are
# overriden by any Cache headers in the response.
proxy_cache_valid 200 301 302   1d;
proxy_cache_valid any           5s;

# Limit calls to origin to one per cache_key
proxy_cache_lock on;

# Keep serving stale cache when origin is down or while updating
proxy_cache_use_stale error timeout invalid_header updating
	http_500 http_502 http_503 http_504;

# Set purge cache when remote is ORIGIN_HOST and has the header
# X-Accel-Purge: purge
map "$remote_addr:$http_x_accel_purge" $cache_purge {
	default                   0;
	"${ORIGIN_HOST}:purge"    1;
}
proxy_cache_bypass $cache_purge;

# Cache on uri
proxy_cache_key $uri$is_args$args;
